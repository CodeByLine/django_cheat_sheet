{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue233;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280\sa319\partightenfactor0

\f0\b\fs24 \cf0 \expnd0\expndtw0\kerning0
Note\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\b0 \cf0 A little Python:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Starting with Python 3.6, you can use the string interpolation syntax (also known as f-strings): 
\f1 f'\{self.id\} (\{self.book.title\})'
\f0 .\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
In older versions of this tutorial, we were using a {\field{\*\fldinst{HYPERLINK "https://www.python.org/dev/peps/pep-3101/"}}{\fldrslt \cf2 \ul \ulc2 formatted string}} syntax, which is also a valid way of formatting strings in Python (e.g. 
\f1 '\{0\}\'a0(\{1\})'.format(self.id,self.book.title)
\f0 ).\
}